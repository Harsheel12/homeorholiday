type Query {
    # User Queries
    users: [UserResponse!]!
    user(id: ID!): UserResponse
    userByEmail(email: String!): UserResponse
    isEmailExisting(email: String!): Boolean!

    # Authentication Queries
    validateToken: Boolean!
    me: UserResponse!
}

type Mutation {
    # Authentication Mutations
    registerUser(input: RegisterUserRequest!): AuthResponse!
    loginUser(input: LoginUserRequest!): AuthResponse!
    refreshToken(input: RefreshTokenRequest!): AuthResponse!
}

# Authentication Types
input RegisterUserRequest {
    firstName: String!
    lastName: String!
    email: String!
    password: String!
}

input LoginUserRequest {
    email: String!
    password: String!
}

type AuthResponse {
    accessToken: String!
    refreshToken: String!
    tokenType: String!
    expiresIn: Int!
    user: UserResponse!
}

input RefreshTokenRequest {
    refreshToken: String!
}

# User Types
type UserResponse {
    id: ID!
    firstName: String!
    lastName: String!
    email: String!
    fullName: String!
    createdAt: String!
    updatedAt: String!
}